#                   Интерфейс пользователя (UI/UX дизайн)


# UI/UX дизайн является важной частью проектирования приложения, 

# так как он определяет пользовательский интерфейс 

# и опыт взаимодействия пользователя с приложением. 

#           Вот несколько основных шагов при проектировании UI/UX дизайна:


#                 1. Исследование пользователя: 

# Что такое UX-исследования
# Чтобы создать удобный и востребованный продукт, нужно разобраться, зачем он нужен пользователю. 
# Залог хорошего дизайна, удобного интерфейса и позитивного пользовательского опыта — UX-исследования. 
# Они помогают понять, для чего человеку наш продукт и как он хочет им пользоваться.

# UX-исследования — важная часть проектирования. Им нужно уделять особое внимание на всех этапах 
# разработки, потому что они позволяет решить большое количество проблем, связанных с использованием 
# продукта.

# Что дают UX-исследования:

# 1. Снижают риск создания невостребованного продукта. 

# 2. Позволяют выбрать наиболее удачный UI.

# 3. Повышают уровень удовлетворенности и лояльности пользователя.

# Все UX-исследования можно разделить на количественные и качественные.

# Количественные UX-исследования измеряют числовые показатели. Они отвечают на вопросы Как много?, 
# Как часто?, Сколько?. Количественные исследования важны для понимания статистических данных. 
# К таким методам относятся:

# опрос,

# А/В тестирование,

# карточная сортировка,

# юзабилити тестирование.

# Качественные UX-исследования помогают понять, почему пользователи совершают то или иное действие. С их помощью можно получить инсайты, данные о потребностях, мотивах и проблемах пользователей. Они отвечают на вопросы Почему?, Как именно?. К ним относятся:

# глубинные интервью,

# фокус-группа,

# юзабилити-тест,

# синтез персонажей.

# Фокус-группы

# Фокус-группы — качественный метод. Его суть в том, чтобы собрать группу людей и вместе с ними 
# обсудить поставленные задачи. Этот метод используют, чтобы получить широкий спектр мнений и новых 
# идей за одно интервью. Фокус-группа дает общее представление о том, как люди воспринимают ваш 
# бренд или концепцию продукта.

# Существует несколько видов фокус-групп:

# 1. Стандартная — 8–10 участников.

# 2. Мини — 5–6 участников: позволяет глубже и детальнее изучить точку зрения участников. 

# 3. Peer — 2–4: переходный вариант между интервью и фокус-группой, позволяет изучить поведенческие 
# стратегии.

# Особенность фокус-групп — в групповой динамике. В группе респонденты могут вовлечься в разговор 
# и рассказать больше, чем рассказали бы во время личного интервью. В то же время респонденты могут 
# влиять друг на друга, менять мнение из-за аргументов других участников или стесняться рассказать 
# о своих идеях. Особенно, если эти идеи отличаются от идей большинства.

# Сейчас при разработке Digital-продуктов этот метод, как правило, не используют, так как он не 
# позволяет собирать достаточную и достоверную информацию от респондентов. Также собрать фокус-группу 
# сложно — встреча должна проходить офлайн. Плюс ее модерация и обработка данных требует больше усилий, 
# чем, например, проведение глубинного интервью.

# Глубинные интервью
# Глубинное интервью — это личное интервью; по сути, это неформальная, свободная по форме беседа. 
# В ходе беседы интервьюер узнает мнение, убеждения, осведомленность или привычки респондента.

# При создании нового продукта, новой функциональности или при доработке текущих решений важно 
# понимать потребности и ожидания пользователей. И глубинное интервью может в этом помочь. 
# С его помощью вы узнаете больше о пользователе (пол, возраст и т. д.), о его опыте, скрытых 
# и явных мотивах, об отношении к вашему продукту и конкурентам.

# Главная цель интервью — докопаться до истинных причин и мотивов поведения пользователя, 
# потому что чаще всего человек сам не отдает отчет, почему он принимает то или иное решение. 
# Глубинное интервью подходит практически для любого бизнеса, использовать его можно в разных ситуациях.

# Сферы применения:


# 1. Сбор информации о ЦА.

# Когда бизнес предлагает решение для широкой аудитории, важно провести сегментацию. 
# Затем нужно сформировать портрет, выявить потребности, барьеры, модели поведения, 
# особенности покупательского опыта для каждого сегмента, понять, чем они отличаются друг от друга. 
# Всё это применимо, когда работаешь над новым продуктом, ищешь свою нишу или новую ЦА.

# 2. Сбор рекомендаций.

# Любой продукт со временем требует доработки и улучшений. Лучший способ понять, что исправить 
# или добавить, — пообщаться с пользователями. В этом случае интервью позволит понять, как люди 
# используют продукт, что им не нравится, что затрудняет выполнение задач, какие у них ожидания.

# 3. Анализ конкурентов.

# На любом этапе разработки продукта важно оценивать свое конкурентное окружение. Анализ конкурентов 
# позволяет понять, какова ситуация на рынке, какие тенденции и проблемы актуальны. Еще анализировать 
# конкурентов нужно, чтобы использовать их опыт: выявлять Best Practices и удачные паттерны 
# взаимодействия.

# Общение с пользователями дает возможность узнать больше о потребительском восприятия других компаний: 
# с какими сложностями они сталкиваются при использовании продуктов, плюсы и минусы конкурентов, 
# в чем преимущества вашего продукта.

# 4. Создание карты потребительского опыта (CJM).

# С помощью глубинных интервью можно определить точки контакта клиента с вашим продуктом и барьеры, 
# с которыми он сталкивается на каждом этапе. Заодно можно выяснить, какие эмоции вызывает каждый 
# этап взаимодействия с продуктом, точки роста и развития продукта.

# 5. Новая функциональность (проверка и оценка нового решения).

# Любая функция требует тщательной проверки и оценки прежде, чем будет принято решение о внесении 
# изменений. Протестировать новое решение можно с помощью интервью, на котором вы получите обратную 
# связь от пользователей вашего продукта. Чаще всего это применимо к созданию нового продукта и 
# оценке прототипов.

# 6. Проверка гипотез.

# Глубинные интервью, как и фокус-группы, могут помочь в формировании гипотез. Когда гипотезы 
# сформированы, можно провести количественные исследования, например опрос, чтобы подтвердить 
# или опровергнуть их с помощью статистических данных.

# Виды глубинных интервью
# Глубинные интервью можно разделить на три группы:

# Решенческие: есть решение (прототип) или гипотеза о решении, которые нужно проверить на реальных 
# пользователях.

# Проблемные: есть проблема или гипотеза о проблеме, с помощью интервью мы можем 
# подтвердить/опровергнуть ее, найти способы решения на основе обратной связи от пользователей.

# Исследовательские: получить данные о ЦА, точки взаимодействия с продуктом и др.

# UX-тестирование
# UX-тестирование — качественный метод исследования, в рамках которого респондент проходит 
# задания на действующем интерфейсе или прототипе будущего интерфейса.

# С помощью этого метода проверяют сценарии поведения пользователя в интерфейсе, чтобы определить, 
# насколько понятны и работоспособны пользовательские пути, какие блокеры возникают у пользователя 
# в момент взаимодействия с продуктом, какие эмоции он испытывает во время взаимодействия.

# Для каких работ подходит:

# Оценить, насколько удобно работать с существующим продуктом.

# Сравнить два интерфейса, например старый и новый, свой и конкурента.

# Сравнить удобство интерфейса для разных групп пользователей, например начинающих и продвинутых.

# Обнаружить возможные проблемы удобства интерфейса до запуска продукта и устранить их заранее.

# Виды UX-тестирования
# Модерируемое: интервьюер дает задания респонденту и следит за ходом выполнения задания.

# Модерируемое с элементами IDI: интервьюер дает задания респонденту и следит за ходом выполнения 
# задания + проводит интервью с респондентом, например о его опыте взаимодействия с интерфейсом.

# Немодерируемое: пользователю даются задания без интервьюера.

# Количественное немодерируемое.

# Количество выборки
# Специалист по юзабилити Якоб Нильсен когда-то сформулировал «правило пяти». Оно гласит, ч
# то 5 респондентов обнаруживают 85% проблем с интерфейсом. И правило действительно работает, 
# но многие начинают применять его везде и всегда. Это может навредить результату.

# Для кастдевов нужно больше интервью — 20, 40, 50. Сегментируйте аудиторию, в каждом сегменте 
# выберите как минимум 2–3 представителей с разным опытом.

# В качественных исследованиях действует концепция насыщения: выборка должна быть достаточной, 
# чтобы обнаружить все или почти все конфигурации смысла и опыта, важные для исследования. 
# Но в то же время она не должна быть слишком большой — тогда она становится контрпродуктивной.

# Как готовиться к интервью
# В первую очередь мы должны понять, для чего хотим провести исследование и какая у него цель. 
# Это может быть анализ текущего решения, сбор данных о предыдущем опыте пользователя и др. 
# Исходя из целей исследования, необходимо составить список гипотез, которые мы хотим проверить.

# Гипотеза — это предположение, о том, как будет вести себя пользователь при взаимодействии с продуктом, 
# с какими барьерами он может столкнуться. Важно помнить, что гипотезы должны коррелировать 
# с целью исследования.

# О чем могут быть гипотезы:

# пользователи, их портрет, их поведение;

# возможные проблемы пользователей;

# возможные или существующие решения;

# барьеры и триггеры, связанные с продуктом;

# понятность интерфейса, его элементов и текстов;

# как интерфейс и его элементы будут использоваться.

# Когда мы определились с гипотезами, составляем список вопросов, которые помогут их проверить.

# Разбейте вопросы на части, чтобы на них было проще отвечать

# Перечисленные темы кажутся похожими, но каждая подразумевает сбор разных данных. 
# Для этого и нужно согласовать с командой укрупненные цели исследования — это поможет 
# правильно определить темы и сэкономить кучу времени.

# Когда общие темы интервью сформированы, нужно составить вопросы к каждой из них. 
# Сами темы — это не вопросы. Если нам нужно понять, почему людям нравятся онлайн-покупки, мы не 
# спрашиваем об этом респондента прямо. Нужно выяснить, почему именно он любит или не любит 
# онлайн-покупки.

# ⛔️ Плохо

# ✔️ Хорошо

# Почему люди покупают онлайн?

# Какие товары вы покупаете в интернете?

# Какие товары вы никогда не покупаете в интернете? Почему?

# Что вам нравится в процессе оплаты онлайн? Что не нравится?

# Не используйте формулировки, которые могут повлиять на ответ

# Распространенная ошибка — пытаться быстро получить нужные ответы. Не нужно думать за клиента и решать, 
# что он вам может ответить. Главная задача — получить ответы клиента, а не навязать ему своё мнение.

# ⛔️ Плохо

# ✔️ Хорошо

# Сильно вас раздражает, когда что-то не работает при заказе товара онлайн?

# Постарайтесь припомнить, когда вы в последний раз хотели купить товар онлайн и что-то не работало. 
# Что вы чувствовали?

# Спрашивайте о конкретных событиях 

# Если спрашивать пользователя о конкретной ситуации, его ответы будут более точными. 
# О реальном опыте клиенты рассказывают более искренне и дают больше подробностей. 
# Нужно постараться своим вопросом направить клиента на конкретную ситуацию в его прошлом опыте.

# ⛔️ Плохо

# ✔️ Хорошо

# Какие мысли приходят в голову, когда не получается завершить покупку онлайн?

# Расскажите, что вы подумали, когда в последний раз пытались что-то купить в интернете, 
# но так и не смогли?

# По возможности задавайте открытые вопросы

# ⛔️ Плохо

# ✔️ Хорошо

# Что вы недавно покупали онлайн?

# Расскажите о том, как вы в последний раз покупали что-нибудь онлайн?

# Признаки хорошего интервью
# Есть вопросы о конкретном опыте из жизни респондента. 

# Есть вопросы о прошлых и настоящих потребностях клиента. 

# Мало или совсем нет закрытых вопросов.

# Интервьюер не пытается продать продукт прямо во время интервью. 

# Есть уточняющие вопросы для понимания причины. 

# Задается один вопрос за раз. 

# Выдержаны паузы.

# Нет пустых разговоров. 

# Разговор записан на диктофон. 

# Вопросы заданы последовательно. Нет гонки и допроса.

# Сколько нужно вопросов, чтобы всё получилось? Для интервью важны те вопросы, которые помогут 
# разговорить собеседника и получить от него как можно больше информации о продукте и его опыте. 
# Поэтому не отталкивайтесь от цифр. Спрашивайте всё, что поможет лучше понять мотивацию пользователя. 
# Но учитывайте, что собеседник может устать. Уставшие люди часто дают формальные ответы, нам такие 
# не подходят.

# Еще несколько советов для глубинного интервью
# Не предлагайте респонденту варианты ответов. Человеку всегда проще выбрать предложенный вариант, 
# чем задуматься и понять причины своего выбора.

# Не задавайте вопросы про будущее. Когда вы задаете вопрос, человек находится в одной жизненной 
# ситуации, и эта ситуация может измениться к моменту запуска продукта или доработок.

# Конкретизируйте оценочные высказывания. Оценочные высказывания — это что-то вроде «мне так удобно», 
# «мне так понятно», «мне так комфортно». У каждого человека может быть разное определение этих понятий, 
# и нам важно понять, что именно имеет в виду конкретный респондент.

# Не додумывайте за респондента. Если вы не уверены, что поняли ответ правильно, лучше уточните.

# Не перебивайте респондента, но при этом не забывайте модерировать беседу, 
# чтобы человек не ушел от темы.

# Перед началом интервью немного расскажите собеседнику о себе. Респонденту будет проще делиться 
# подробностями своей жизни, если он что-то знает о вас. Можно рассказать о своем опыте или о своей 
# роли в компании. Расскажите, что именно исследуете, что хотите улучшить, для чего проводите интервью.

# Всегда нужно слушать клиента, даже несмотря на то, что интервью записывается. 
# Люди чувствуют, когда в них не заинтересованы, замыкаются и не хотят ничем делиться. 
# Во время интервью мы ведем беседу с человеком, любое слово может увести диалог в другую сторону, 
# поэтому важно учиться слушать. 

# Во время интервью, особенно если это видеозвонок или личная беседа, нужно проявлять интерес к тому, 
# что говорит человек. Опираться на отдельные фразы, выражать мимикой эмоции, реагировать на ответы 
# собеседника. Это даст ему понять, что перед ним реальный человек, который действительно слушает 
# его и заинтересован в том, что он говорит. 


# Если клиент рассказывает что-то не по теме, нельзя перебивать. Пусть он закончит мысль. 
# Вернуть разговор в нужное русло помогают наводящие и уточняющие вопросы. А также вежливая 
# просьба вернуться к теме исследования — но только после того, как собеседник закончит мысль. 
# Если человека перебивают, он думает, что сказал что-то не то и замыкается. Он начинает тщательно 
# взвешивать каждое слово и приукрашивать свои ответы, а это грозит недостоверностью полученных данных.

# Уточняющие вопросы — это всегда хорошо. Они помогают получить полные ответы. Чем больше уточняющих 
# вопросов вы зададите, тем больше информации получите. Если интервьюер видит, что респондент может 
# какую-то тему раскрыть глубже, то он может задавать дополнительные вопросы по ней. 
# И наоборот — какие-то вопросы можно пропустить, если у отвечающего нет такого опыта.

# Во время интервью нельзя высказывать своё мнение. Нужно быть на стороне респондента, 
# даже если вы понимаете, что в чём-то он может быть не прав.

# Как обработать результаты интервью
# Когда все интервью проведены, нужно собрать всю информацию. А потом понять, к чему мы пришли, 
# достигли ли цели и нужно ли дальше проводить интервью. Поэтому важно сразу выделять инсайты. 
# Причем разные: не только самые популярные и массовые, но и единичные.

# В результатах исследования можно выделить несколько видов информации:

# Реальные проблемы — то, что вызвало у респондента негативные эмоции.

# Преимущества — причины, по которым респондент пользуется продуктом.

# Предположения — когда респондент не уверен в ответе или выдвинул гипотезу.

# Первичные результаты можно оформить в виде таблицы.

# Блок с общей информацией о респонденте: как его зовут, возраст, место проживания, пол.

# Ответы на главные вопросы: в каждой ячейке фрагмент интервью с конкретным пользовательским сценарием. 
# В строках текст может быть лаконичным: «да» или «нет» — или содержать большие фрагменты интервью. 

# Дополнительный блок, пометки: он идет вне скрипта, вне списка вопросов интервью; сюда заносим то, 
# что не связано с темой конкретного интервью, но о чем тоже важно сказать.

# При подготовке результатов исследования, нужно разобраться, сколько респондентов отвечает 
# одинаково — это стоит вынести в общий вывод. Например, у вас 20 опрошенных. 10 из них не 
# пользуются личным кабинетом, а остальные пользуются иногда или каждый день. В этом случае в 
# общем выводе придется указать, что большинство пользователей не заходит в личный кабинет.

# Вывод нужно делать аккуратно и точно. Это самая важная часть исследования, на его основе другие 
# подразделения в будущем будут принимать решения об улучшении продукта или сервиса. Универсального 
# шаблона для отчета по глубинному интервью нет. Это, скорее, набор гипотез, которые еще предстоит 
# проверить.

# Заключение
# Проводить исследования нужно, чтобы лучше понять пользователей, их желания и боли, как и зачем они 
# пользуются продуктами.

# Перед исследованием нужно понять, какую проблему мы будем решать с его помощью и с кем из наших 
# клиентов стоит поговорить.

# Перед исследованием нужно определиться, каким методом мы воспользуемся. Каждый метод исследования 
# подходит под свои задачи.

# Чаще всего аналитики используют глубинные интервью, во время которых с помощью вопросов получают 
# от клиента инсайты.

# Список вопросов нужно готовить заранее — еще до приглашения клиентов; в него нужно включить план,
# разбитый на несколько блоков.

# Все основные вопросы дополняются уточняющими — они помогают глубже понять ответы клиентов.

# Результаты исследования помогут составить гипотезы, которые затем стоит проверить, 
# или список идей и доработок для текущего решения.

#                  2. Создание пользовательских сценариев: 

# Пользовательский сценарий (user scenarios) – представляют собой визуальное повествование о поведении 
# пользователя, основанное на одной персоне, представляющей одного из юзеров веб-сайта или приложения. 
# Каждый сценарий основан на конкретной цели, которую необходимо достичь. Такие сценарии используются 
# в исследованиях UX, чтобы помочь нам визуализировать шаги, которые юзер предпринимает для достижения 
# определенной цели, например, покупка продукта, поиск информации или использование услуги на веб-сайте, 
# в мобильном приложении. US описывает роль пользователя в продукте, его потребность и результат, 
# который он получит, если событие произойдет.

# В сценарии необходимо определить:
# — Цели пользователей. Расскажите, какие цели на самом деле преследуют пользователи при работе с 
# продуктом.
# — Результаты. Опишите, какие действия пользователь может выполнить при работе с продуктом.
# При создании US обычно используют доску с цветными стикерами, для этого можно использовать 
# программы Miro или FigJam, которые систематизируют и упрощают работу внутри команды.

# Зачем нужны пользовательские сценарии?
# Проанализировать опыт пользователя
# Изучить желания, цели и предпочтения юзеров
# US помогает найти самые важные моменты, которые необходимо учесть в ходе разработки UX, 
# чтобы лучше отразить основные побуждения и потребности клиентов

# Типы user stories
# Есть три основных примера пользовательских сценариев, которые можно использовать в исследованиях UX. 
# Эти сценарии различаются в зависимости от уровня визуализируемой информации и ее участия в планах 
# команды на будущее. Эти типы следующие:

# US на основе задач:
# Этот сценарий основан на понимании цели пользователя и шагов, предпринятых для достижения этой цели. 
# Он показывает только шаги, необходимые юзеру для выполнения определенных действий на веб-сайте. 
# Это полезно при создании макета и структуры веб-сайта или мобильного дизайна.

# Проработанные US:
# В дополнение к описанию шагов, этот тип проводит детальный анализ, включая поведения пользователя. 
# Такой сценарий предлагает идеи, которые могут улучшить взаимодействие с пользователем, например, 
# устранение препятствий на сайте.

# Полномасштабные US:
# В дополнение к двум вышеуказанным частям, этот тип является более подробным и включает в себя 
# необходимые шаги для улучшения взаимодействия с пользователем при использовании определенной функции, 
# это может включать в себя создание плана по ее улучшению. Этот тип US чем-то напоминает таск анализ.


# Как применять пользовательские сценарии в исследованиях UX
# В этом примере мы рассмотрим, как использовать пользовательские сценарии на практике, чтобы понять
# поведение юзера и отразить его в дизайне веб-сайта или мобильного приложения. 
# Во время исследования можно обсуждать нескольких сценариев, которые включают одну или несколько 
# функций в приложениях.

# — Соберите дискуссионную группу

# Наряду с организацией помещения и ресурсов нам необходимо собрать команду, которая будет участвовать 
# в обсуждении. Около пяти участников подходят для того, чтобы обеспечить хорошие результаты и не 
# тратить время на обсуждения. В команду могут входить UX-исследователи, дизайнеры, разработчики и 
# тестировщики, работающие над проектом.

# — Представьте цель сценария

# В начале встречи куратор начинает с представления целей, которые будут обсуждаться во время встречи, 
# чтобы убедиться, что все члены команды понимают, о чем пойдет речь.

# — Начните с первого UX-сценария

# Куратор определяет первый сценарий, который будет обсуждаться, и связанную с ним личность, 
# которая будет использоваться в этом сценарии.

 

# Например:
# Личность: Жанна, 27-летняя студентка с непринужденным вкусом, предпочитает делать покупки 
# в Интернете, чтобы сэкономить время и получить больше разнообразия.
# Цель: Купить для подруги уникальный подарок по доступной цене.

 

# — Визуализируйте шаги UX

# Используйте стикеры для заметок, чтобы написать шаги, которые нужно пройти персонажу, 
# чтобы достичь цели, под каждым шагом добавляйте комментарии

 

# Например:
# Командные комментарии на этапе, такие как отзывы или наблюдения предыдущего клиента. 
# Вопросы и предположения, связанные с этапом и его функциями, такими как отображение 
# продуктов и их расположение на макете.
# Идеи и предложения, которые могут улучшить шаг.

 

# После того, как шаги выполнены, все это размещается на доске и документируется путем фотографирования. 
# Это может помочь поделиться сценарием с другими членами команды, менеджерами и руководителями, 
# которые не смогли присутствовать на сеансе.

# — Повторяйте, пока не закончите

# Составляйте разные сценарии для каждой цели и персонажа, пока не охватите все функции. 
# Для этого может потребоваться более одного обсуждения, чтобы охватить все возможные цели.

# — Получите обратную связь

# После завершения сценариев заинтересованные стороны могут предоставить отзывы, которые могут 
# способствовать улучшению взаимодействия с пользователем при использовании функций веб-сайта или 
# мобильного приложения.
# После получения обратной связи можно провести еще одну встречу, чтобы проанализировать все и 
# изменить сценарий в соответствии с этими отзывами. Затем окончательная версия может быть передана 
# командам дизайнеров, разработчиков для реализации на этапе производства.

# Вывод
# Пользовательский сценарий является одним из простых в использовании и эффективных инструментов 
# исследования UX, который может помочь нам визуализировать пользовательский опыт, чтобы лучше 
# понять поведение юзера и шаги, необходимые для выполнения каждой задачи. Визуализированный сценарий 
# может помочь нам обсудить предложения и комментарии, связанные с каждым шагом, с членами команды, 
# чтобы обсудить возможности его улучшения. Как только сценарий будет улучшен и одобрен, команда 
# дизайнеров и разработчиков получит лучшее представление о том, как воплотить этот опыт в 
# функциональный дизайн-макет.

#                         3. Wireframing: 

# Создайте проводную рамку приложения, используя программные инструменты 

# или даже бумагу и карандаш. 

# Wireframe — это карта экранов, которая показывает навигацию между ними и содержит минимальную 
# детализацию.


# Wireframes имеют ограниченные визуальные характеристики, поскольку большинство элементов дизайна 
# (например, изображения, видео, цвета, реальный текст и т. д.) не включены в этот инструмент. 
# Вместо конкретных элементов дизайнеры используют заполнители. Например, квадрат с крестиком 
# представляет изображение. Этот прием имеет важное значение — заполнители объектов и серая палитра 
# помогают сосредоточиться на макете и структуре страницы, а не на визуальных аспектах дизайна.

# Иногда заказчики могут не понимать, что значит «главное изображение», «интеграция с картой Google», 
# «фильтрация продуктов» и сотни других терминов. Вайрфрейминг конкретных функций дает клиенту четкую 
# информацию о том, как они будут работать, где будут размещаться и насколько они могут быть полезны 
# на самом деле.

# Иногда глядя на wireframe, заказчику или команде становится понятно, что от некоторых функций лучше 
# отказаться. Когда смотрим на фичи без влияния красок и картинок, видим, как они работают в чистом 
# виде и насколько соответствуют целям и задачам продукта. На этом этапе внести изменения проще и 
# быстрее. При этом бюджет для такой работы совсем небольшой — экраны выполнены без детализации, что 
# значительно снижает стоимость артефакта.

# Преимущества вайрфреймов
# Одним из больших преимуществ wireframe является то, что он обеспечивает раннюю визуализацию, 
# которую можно использовать для обзора с клиентом.

# С практической точки зрения каркасы обеспечивают правильное размещение содержимого и функций 
# страницы в соответствии с потребностями пользователей и бизнеса. И по мере продвижения проекта 
# их можно использовать в качестве полезного диалога внутри команды для согласования видения и 
# масштабов проекта.

# Wireframe и прототипы: не одно и то же
# Многие используют термины wireframe и прототип как синонимы, но между ними есть существенные различия: 
# они выглядят по-разному, они сообщают разные вещи и служат разным целям.

# Прототипирование — это процесс создания интерактивного опыта. Прототип представляет собой конечный 
# продукт, включая моделирование взаимодействия с пользовательским интерфейсом.

# В отличие от wireframes, которые часто выглядят одинаково, прототипы могут значительно различаться. 
# Это могут быть как и простые артефакты, отражающие элементарные взаимодействия, так и кликабельные 
# инструменты, которые выглядят и работают почти как настоящий продукт.

# Прототипы служат мостом к реальному продукту. Цель прототипирования показать связь экранов 
# посредством пользовательского опыта и их назначение. Это делает его удобным для тестирования с 
# реальными пользователями — прототипы позволяют участникам взаимодействовать с дизайном так же, 
# как они взаимодействуют с готовым продуктом.

# Как использовать Wireframes в разработке
# Можно предложить сделать wireframes на этапе дискавери фазы, чтобы проработать экраны мобильного или 
# веб-приложения.

# Тогда в wireframes описывается информация о целях экрана и схематично рисуются те элементы, 
# которые планируется там расположить. По собственному опыту скажу, что хорошо работать над этим 
# инструментом параллельно с BPMN-диаграммой. После того как wireframes прорисованы и согласованы с 
# заказчиком, а диаграмма проработана, эти артефакты объединяем в один. Такой ход дает возможность 
# увидеть, каких экранов не хватает на диаграмме процессов, или какие процессы мы не учли при проработке 
# BPMN.

# Так при помощи wireframes и BPMN-диаграмм обеспечивается целостность бизнес-процессов будущего 
# приложения. Также вайрфреймы значительно экономят время и деньги на этапе тестирования и внесения 
# исправлений на более поздних этапах проекта.

#              4. Дизайн пользовательского интерфейса: 

# Дизайн пользовательского интерфейса (UX design, UXD, UED или XD) - это процесс определения опыта, 
# который пользователь будет испытывать при взаимодействии с компанией, ее услугами и продуктами. 
# Дизайнерские решения в UX-дизайне часто определяются исследованиями, анализом данных и результатами 
# тестов, а не эстетическими предпочтениями и мнениями. В отличие от дизайна пользовательского 
# интерфейса, который фокусируется исключительно на дизайне компьютерного интерфейса, 
# UX-дизайн охватывает все аспекты восприятия пользователем продукта или веб-сайта, 
# такие как его удобство использования, полезность, желательность, восприятие бренда и 
# общая производительность. UX-дизайн также является элементом customer experience (CX), 
# который охватывает все аспекты и этапы взаимодействия клиента с компанией.

# Область дизайна пользовательского интерфейса - это дисциплина в области концептуального 
# проектирования, уходящая корнями в человеческий фактор и эргономику, область, которая с конца 1940-х 
# годов фокусировалась на взаимодействии между людьми-пользователями, машинами и контекстуальными 
# средами для проектирования систем, учитывающих потребности пользователя.[4] С распространением 
# компьютеров на рабочих местах в начале 1990-х годов пользовательский интерфейс начал приобретать 
# позитивное значение для дизайнеров. Дональд Норман, профессор и исследователь в области дизайна, 
# удобства использования и когнитивистики, ввел термин "пользовательский интерфейс" и донес его до 
# более широкой аудитории.

# Я изобрел этот термин, потому что считал человеческий интерфейс и удобство использования слишком 
# узкими понятиями. Я хотел охватить все аспекты работы пользователя с системой, включая графику 
# промышленного дизайна, интерфейс, физическое взаимодействие и руководство. С тех пор этот термин 
# распространился настолько широко, что начинает терять свое значение.

# — Дональд Норман
# В сообществе разработчиков пользовательского интерфейса ведутся дебаты относительно его 
# направленности, частично спровоцированные исследователем и практиком дизайна Доном Норманом. 
# Норман утверждает, что, когда дизайнеры описывают людей только как клиентов, потребительниц и 
# пользователей, дизайнеры рискуют снизить свою способность создавать хороший дизайн.

#                    5. UX-дизайн: 

# Думайте о пользовательском опыте и удобстве использования. 

# Размещайте элементы интерфейса таким образом, чтобы пользователи 

# могли интуитивно найти и использовать функции. 

# Обеспечьте понятность и простоту использования приложения.

# UX-дизайн — многомерное определение, которое охватывает широкую область знаний и характеризует 
# ощущения пользователя, взаимодействующего с онлайн-ресурсом[3] и включает множество составляющих: 
# интерактивный дизайн, информационную архитектуру, визуальный дизайн, юзабилити и взаимодействие 
# между человеком и компьютером. Цель UX-дизайна — улучшить степень удовлетворенности пользователя и 
# его лояльность благодаря пользе, простоте использования и удовольствию, которое он получает в 
# процессе взаимодействия с интернет-ресурсом[4]. Процесс создания дизайна взаимодействия с 
# пользователем включает конкурентный анализ, разработку шаблонов, которые будут ценными для 
# определенной целевой аудитории. UX-дизайн отвечает за функциональное восприятие и взаимодействие 
# пользователя с ресурсом[5].

# Начало 90-х по праву считается «золотой эпохой» для пользователей. В это время компьютерная графика 
# получила мощный толчок к развитию благодаря тотальному снижению цен на персональные компьютеры[11]. 
# С этого момента разработка дизайна взаимодействия с пользователем стала неотъемлемой частью работы 
# специалистов. Дональд Норман ввёл термин «UX дизайн» в контексте его интереса к окружающим вещам[12] 
# и сделал так, чтобы этот термин широко прижился[13]. Он полагал, что интерфейс для пользователя, 
# а также юзабилити — это слишком узкие понятия, а термин «пользовательский опыт» шире за счёт того, 
# что он касается также физического взаимодействия пользователя с системой[14].

# Термин «пользовательский опыт»/UX непосредственно отождествляется с «дизайном взаимодействия с 
# пользователем», он тесно связан с ориентированным на пользователя проектированием и 
# человеко-компьютерным взаимодействием, и включает в себя некоторые их компоненты.

# Принципиальные различия между UX-дизайном и дизайном в том, что первый решает проблемы, 
# связанные с отдельным продуктом или отдельными элементами внутри системы, когда web-дизайнеры 
# проектируют весь проект в целом[12] .

#                     6. Прототипирование: 

# Прототипи́рование (англ. prototyping от др.-греч. πρῶτος — первый и τύπος — отпечаток, оттиск; 
# первообраз) — быстрая «черновая» реализация базовой функциональности будущего продукта/изделия, 
# для анализа работы системы в целом. На этапе прототипирования малыми усилиями создаётся работающая 
# система (возможно неэффективно, с ошибками, и не в полной мере). Во время прототипирования видна 
# более детальная картина устройства системы.

# Используется в машино- и приборостроении, программировании и во многих других областях техники; 
# как правило, прототип становится приложением к техническому заданию. Прототипирование не обязательно 
# выполняется в рамках тех же технологий, что и разрабатываемая система.

# Прототипирование, по мнению некоторых разработчиков, является самым важным этапом разработки. 
# После этапа прототипирования обязательно следуют этапы пересмотра архитектуры системы, разработки, 
# реализации и тестирования конечного продукта.

# Виды прототипов
# Существует четыре основных вида прототипов, между собой они различаются на основе сферы применения 
# модели, для которой делается прототип:

# Промышленные прототипы. Обычно они называются мастер-моделью[источник не указан 1271 день] 
# (например, в микроэлектронике — «инженерный образец»).
# Архитектурные презентационные макеты города, дома или отдельной комнаты (см. архитектура).
# Транспортные — прототипы любого транспортного средства (автомобиль, корабль, самолёт и т. д.).
# Товарный прототип — модель товара, которую используют для выставок и презентаций.
# Процесс создания прототипа
# Процесс создания прототипа состоит из четырёх шагов:

# Определение начальных требований.
# Разработки первого варианта прототипа (в ПО, например, — который содержит только пользовательский 
# интерфейс системы, см. Прототипирование программного обеспечения).
# Этап изучения прототипа заказчиком и конечным пользователем. Получение обратной связи о необходимых 
# изменениях и дополнениях.
# Переработка прототипа с учётом полученных замечаний и предложений.
# Качества, которыми должен обладать эффективный прототип[источник не указан 1838 дней]:

# Этап создания прототипа не должен быть затяжным.
# Эффективные прототипы являются одноразовыми. Они предназначены для того чтобы донести идею до 
# заинтересованного лица. После того как идея была донесена, прототип может быть отвергнут.
# Эффективные прототипы являются сфокусированными, это означает что следует обращать внимание на 
# сложные части при создании прототипов. Необходимо найти шаблонные взаимодействия, которые давно 
# известны в теории юзабилити.
# Необходимо обращать внимание на элементы взаимодействия, которые принесут пользу вашему продукту.
# Прототипирование программных продуктов и компьютерных систем
# Основная статья: Прототипирование программного обеспечения
# Термин «прототипирование» активно используется в индустрии компьютерных систем 
# (в английском языке используется термин «Software Prototyping»).

# Прототипирование в разработке программного обеспечения является важным этапом в жизненном цикле 
# программного обеспечения.

# Для прототипирования компьютерных (программных) систем чаще используют языки программирования 
# высокого уровня абстракции (напр., Java, Perl, Python, Haskell) и специализированные инструменты 
# прототипирования (напр., Axure RP, Microsoft Expression Blend и пр.).

# После рассмотрения прототипа, при окончательной реализации решения обычно пишут более аккуратный, 
# документированный код, а на тестирование и отладку системы тратят сравнительно большое количество 
# усилий. На этапе прототипирования выявляются важные архитектурные ошибки, вносятся поправки в 
# интерфейсы модулей системы и перераспределяется функциональность между модулями системы.

# Создайте интерактивный прототип вашего приложения с использованием 

# специальных инструментов. 

# Прототип позволяет проверить взаимодействие пользователя 

# с интерфейсом и получить обратную связь от пользователей или заказчика.

#                 7. Тестирование и итерации: 

# Жизненный цикл итеративной модели не начинается с полной спецификации требований. Вместо этого 
# разработка стартует с определения и внедрения части программного обеспечения, которая затем может 
# быть пересмотренa для выявления дальнейших требований. Затем процесс повторяется, создавая новую 
# версию программного обеспечения для каждого цикла модели.

# Итеративная модель жизненного цикла ПО состоит из повторения следующих четырех фаз:

# Фаза требований, в которой собираются и анализируются требования к программному обеспечению. 
# Итерация должна в конечном итоге привести к фазе требований, которая дает полную и окончательную 
# спецификацию требований.
# Фаза дизайна, в которой разрабатывается программное решение для удовлетворения требований. 
# Это может быть новый дизайн или развитие раннего раннего варианта дизайна.
# Фаза внедрения и тестирования, когда программное обеспечение закодировано, интегрировано и 
# протестировано.
# Фаза обзора, в которой оценивается программное обеспечение, рассматриваются текущие требования, 
# а также изменения и дополнения к предлагаемым требованиям.
# итеративная модель разработки по
# Для каждого цикла модели необходимо принять решение, будет ли программное обеспечение, созданное 
# циклом, отброшено или сохранено в качестве отправной точки для следующего цикла (иногда называемого 
# инкрементным прототипированием). В конце концов, будет достигнута точка, когда требования будут 
# завершены, и программное обеспечение может быть выпущено, или становится невозможным улучшить 
# программное обеспечение для соответствия требованиям, из-за чего может потребоваться старт с 
# чистого листа.

# Итеративную модель можно сравнить с производством программного обеспечения путем последовательного 
# приближения. Проводя аналогию с математическими методами, которые используют метод последовательного 
# приближения для достижения окончательного решения, преимущество таких методов зависит от того, 
# насколько быстро они его достигают.

# Ключом к успешному использованию итеративного жизненного цикла разработки программного обеспечения 
# является тщательная проверка требований и каждой версии программного обеспечения в соответствии с 
# этими требованиями в каждом цикле модели.

# Первые три фазы типичной итеративной модели на самом деле являются сокращенной формой 
# последовательной V-модели или каскадной модели. Каждый цикл модели производит программное обеспечение, 
# которое требует тестирования на уровне мелких элементов для интеграции программного обеспечения, 
# для системной интеграции и одобрения. По мере того как программное обеспечение развивается через 
# последовательные циклы, тесты должны повторяться и расширяться для проверки каждой новой версии.

# В чем разница между Инкрементальной моделью и Итеративной?
# При инкрементальном подходе используется определенное количество шагов, и развитие идет от начала 
# до конца по линейному пути прогрессии.

# Инкрементальное развитие осуществляется поэтапно, начиная с проектирования, внедрения, 
# тестирования/проверки, технического обслуживания. Они могут быть разбиты далее на подэтапы, 
# но большинство инкрементных моделей следуют тому же шаблону. Каскадная модель — это традиционный 
# подход к постепенной разработке.

# В Итеративном подходе нет определенного количества шагов. Разработка скорее выполняется в циклах.

# Итеративная разработка в меньшей степени завязана на отслеживании прогресса отдельных функций. 
# Вместо этого основное внимание уделяется созданию рабочего прототипа в первую очередь и добавлению 
# функций в течение циклов разработки, где шаги «Приращение развития» выполняются для каждого цикла. 
# Гибкое моделирование — типичный итеративный подход.

# Преимущества Итеративной модели
# Создает рабочее программное обеспечение быстро и на ранних стадиях жизненного цикла.
# Более гибкий — дешевле выйдет изменить направления и требования.
# Легче тестировать и отлаживать при меньших итерациях.
# Легче управлять риском, потому что рискованные части определяются и обрабатываются во время итераций.
# Каждая итерация — легко управляемая веха.

# Проводите тестирование UI/UX дизайна с реальными пользователями, 

# получайте и анализируйте обратную связь и вносите необходимые изменения. 

# Продолжайте итерации до тех пор, пока интерфейс не станет легким 

# в использовании и устраивающим максимальное количество пользователей.

#                  8. Разработка дизайн-системы: 

# Что такое дизайн система?
# Дизайн система интерфейса представляет собой набор компонентов для проектирования, который помогает 
# создавать качественный продукт, заложенный в концепции. Это также похоже на некий «инвентарь», 
# который можно использовать для сбора ресурсов и использования их в вашем дизайне.

# Зачем нужна дизайн система?
# Дизайн система налаживает взаимодействие внутри продукта, помогая дизайнерам и разработчикам 
# структурировать интерфейс продукта.

# Также, органичная система пользовательского интерфейса учит пользователя интуитивно ориентироваться 
# по всему продукту.

# Создание дизайн системы
# Лучший способ — это составить список всех различных шаблонов, цветов, стилей текста и паттернов, 
# которые вы будете использовать в своем дизайне. Это должен быть четкий набор, который показывает 
# все компоненты и функции, необходимые для создания продукта (веб-сайта или приложения). 
# Дизайн системы пользовательского интерфейса требуют достаточно много времени и самоотверженности, 
# что может утомить, но никогда не сдавайтесь!

# Мудборды и цветовая палитра
# Давайте начнем с мудборда и цветовой палитры, таким образом, вы зададите тему для своего дизайна и 
# получите довольно хорошую картину о том, как будет выглядеть ваш дизайн. Ваш мудборд может состоять 
# из изображений трендовых пользовательских интерфейсов, вдохновляющих продуктов или простых 
# изображений, которые вам импонируют. Эта доска также поможет вам выбрать цветовую палитру. 
# Помните, что выбор цвета также должен быть основан на ваших исследованиях. Перечислите основные и 
# вторичные цвета и не также забывайте об оттенках этих цветов. Оттенки используются для различных 
# элементов дизайн системы. Большинству интерфейсов понадобятся, как пример, следующие оттенки:

# очень светлый для фона;
# чуть темнее для границ, линий, штрихов или разделителей;
# средний тон для подзаголовков и вспомогательного текста;
# темный для основных заголовков, основного текста и фона.


# Закругленные углы и тени
# После того как определены цвета, перейдем к определению радиуса углов и теней для вашего 
# пользовательского интерфейса. Закругления углов — это основа для ваших пользовательских карточек, 
# таблиц и изменяет общий внешний вид вашего пользовательского интерфейса. Теперь вы можете спросить:

# Откуда мне знать, насколько закругленными должны быть мои края?

# Это зависит от того, какое настроение вы хотите придать пользователю. Если ваш радиус более округлый, 
# он может выглядеть милым или более дружелюбным,если вы решите сохранить его квадратным — он может 
# выглядеть более строгим.


# Тени в основном используются для придания глубины и перспективы нашему дизайну. В последнее время 
# тени находятся в тренде, и они используются для различения нескольких элементов в вашем 
# пользовательском интерфейсе. Четырех теней должно быть достаточно, чтобы стилизовать каждый 
# компонент в нашей системе:

# тонкая тень, чтобы «приподнять» интерактивные компоненты и сформировать ощущение у пользователя, 
# что на это можно нажать,
# более выраженная тень для ховеров компонентов,
# сильная тень, чтобы дать «перспективу» для выпадающих / всплывающих окон и других подобных компонентов,
# отдаленная тень для модальных компонентов.

# Размеры текста
# Нет пользовательского интерфейса без шрифтовой иерархии. Шрифт следует ритму. Вам нужны шрифты, 
# которые будут дополнять друг друга, а также правильные размеры для различных заголовков. 
# Это может показаться очень сложным, но благодаря таким инструментам, как https://type-scale.com/ 
# можно легко подобрать шрифт и его параметры. Все, что вам нужно сделать, это выбрать размер шрифта, 
# и в нем будут перечислены различные размеры, которые могут быть использованы. Вот какие типы шрифта 
# вам могут понадобиться:

# размер основного шрифта (рекоммендуемый — 16px),
# например, чуть больше размер для вспомогательно текста в блоге,
# пара больших размеров для заголовков и подзаголовков,

# очень большой размер для названий разделов,
# например, большой размер для цен на карточке продукта,
# нам также понадобятся несколько маленьких размеров для подсказок и другого вторичного текста.

# Иконки
# Иконки должны быть в одной стилистике. Убедитесь, что они используют сходные друг с другом стили и 
# следуют определенным правилам. Для начала вы можете просто использовать наборы иконок, которые можно 
# скачать бесплатно, но в будущем следите за тем, чтобы они были единообразными.

# Кнопки, слайдер и индикаторы
# Кнопки станут действительно важным элементом вашего дизайна пользовательского интерфейса. 
# Кнопки позволяют пользователям выполнять действия и делать выбор одним нажатием. 
# Кнопки сообщают о действиях и следовательно, должны быть разработаны в соответствии с их рабочими 
# функциями. Они должны легко обнаруживаться и идентифицироваться, четко указав действие, которое 
# они позволяют выполнить. Существуют различные типы кнопок. Отображение статуса кнопок также 
# является важной частью вашего пользовательского интерфейса.

# Раскрывающиеся списки, теги и всплывающие окна (сложные элементы)
# Теперь, когда мы определили базовые элементы системы, мы можем использовать все эти элементы для 
# создания других, таких как выпадающих списков, тегов и всплывающих окон!

# Заключение
# Вот и все! Вы всегда можете добавить другие элементы, которы есть в вашем дизайне. 
# После создания компонентов вы можете начать размещение их в вашем проекте.

# В конце у вас добавятся еще множество другие элементов, например, как на картинках ниже.

# Создайте дизайн-систему, которая определяет стандарты и правила 

# для дизайна элементов интерфейса. 

# Это позволяет сохранять консистентность и облегчает разработку
 
# последующих экранов и функций.

# UI/UX дизайн важен для создания привлекательного и эффективного 

# пользовательского интерфейса. Он способствует лучшей воспринимаемости 

# и удобству использования приложения, 

# что в конечном итоге повышает пользовательское 

# удовлетворение и успех вашего приложения.